{"ast":null,"code":"var _jsxFileName = \"C:\\\\Devwork\\\\tutorials\\\\QandA_netcore5\\\\frontend\\\\src\\\\Pages\\\\HomePage.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React from 'react';\nimport { QuestionList } from '../QuestionList';\nimport { getUnansweredQuestions } from '../QuestionsData';\nimport { Page } from './Page';\nimport { PageTitle } from './PageTitle';\nimport { PrimaryButton } from '../Styles';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const [questions, setQuestions] = React.useState([]);\n  const [questionsLoading, setQuestionsLoading] = React.useState(true);\n  React.useEffect(() => {\n    const doGetUnansweredQuestions = async () => {\n      const unansweredQuestions = await getUnansweredQuestions();\n      setQuestions(unansweredQuestions);\n      setQuestionsLoading(false);\n    };\n\n    doGetUnansweredQuestions();\n  }, []);\n  const navigate = useNavigate();\n\n  const handleAskQuestionClick = () => {\n    navigate('ask');\n  };\n\n  return _jsxDEV(Page, {\n    children: [_jsxDEV(\"div\", {\n      css: css`\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        `,\n      children: [_jsxDEV(PageTitle, {\n        children: \"Unanswered Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), _jsxDEV(PrimaryButton, {\n        onClick: handleAskQuestionClick,\n        children: \"Ask a question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), questionsLoading ? _jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : _jsxDEV(QuestionList, {\n      data: questions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"FOba8qekGaS9gnkOL9JIgzizARY=\", true);\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Devwork/tutorials/QandA_netcore5/frontend/src/Pages/HomePage.tsx"],"names":["css","React","QuestionList","getUnansweredQuestions","Page","PageTitle","PrimaryButton","HomePage","questions","setQuestions","useState","questionsLoading","setQuestionsLoading","useEffect","doGetUnansweredQuestions","unansweredQuestions","navigate","useNavigate","handleAskQuestionClick"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,sBAAT,QAAqD,kBAArD;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,QAA8B,WAA9B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,KAAK,CAACS,QAAN,CAA+B,EAA/B,CAAlC;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CX,KAAK,CAACS,QAAN,CAAe,IAAf,CAAhD;AAEAT,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpB,UAAMC,wBAAwB,GAAG,YAAY;AAC3C,YAAMC,mBAAmB,GAAG,MAAMZ,sBAAsB,EAAxD;AACAM,MAAAA,YAAY,CAACM,mBAAD,CAAZ;AACAH,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,KAJD;;AAKAE,IAAAA,wBAAwB;AACzB,GAPD,EAOG,EAPH;AASA,QAAME,QAAQ,GAAGC,WAAW,EAA5B;;AAEA,QAAMC,sBAAsB,GAAG,MAAM;AACnCF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAFD;;AAIA,SACE,QAAC,IAAD;AAAA,eACE;AACE,MAAA,GAAG,EAAEhB,GAAI;AACjB;AACA;AACA;AACA,SALM;AAAA,iBAOE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEkB,sBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGP,gBAAgB,GACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADe,GAGf,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEH;AAApB;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxCM;;GAAMD,Q;;KAAAA,Q","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport React from 'react';\r\nimport { QuestionList } from '../QuestionList';\r\nimport { getUnansweredQuestions, QuestionData } from '../QuestionsData';\r\nimport { Page } from './Page';\r\nimport { PageTitle } from './PageTitle';\r\nimport { PrimaryButton } from '../Styles';\r\n\r\nexport const HomePage = () => {\r\n  const [questions, setQuestions] = React.useState<QuestionData[]>([]);\r\n  const [questionsLoading, setQuestionsLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    const doGetUnansweredQuestions = async () => {\r\n      const unansweredQuestions = await getUnansweredQuestions();\r\n      setQuestions(unansweredQuestions);\r\n      setQuestionsLoading(false);\r\n    };\r\n    doGetUnansweredQuestions();\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleAskQuestionClick = () => {\r\n    navigate('ask');\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <div\r\n        css={css`\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n        `}\r\n      >\r\n        <PageTitle>Unanswered Questions</PageTitle>\r\n        <PrimaryButton onClick={handleAskQuestionClick}>\r\n          Ask a question\r\n        </PrimaryButton>\r\n      </div>\r\n      {questionsLoading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <QuestionList data={questions} />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}