{"ast":null,"code":"var _jsxFileName = \"C:\\\\Devwork\\\\tutorials\\\\QandA_netcore5\\\\frontend\\\\src\\\\Pages\\\\SearchPage.tsx\",\n    _s2 = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useLocation } from 'react-router-dom';\nimport { searchQuestions } from '../QuestionsData';\nimport React from 'react';\nimport { Page } from './Page';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const SearchPage = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // Get the search parameters in the URL\n  const SearchParams = () => {\n    _s();\n\n    return new URLSearchParams(useLocation().search);\n  };\n\n  _s(SearchParams, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n    return [useLocation];\n  });\n\n  const [questions, setQuestions] = React.useState([]);\n  const search = SearchParams().get('criteria') || '';\n  React.useEffect(() => {\n    const doSearch = async criteria => {\n      const foundResults = await searchQuestions(criteria);\n      setQuestions(foundResults);\n    };\n\n    doSearch(search);\n  }, [search]);\n  return _jsxDEV(Page, {\n    title: \"Search Results\",\n    children: search && _jsxDEV(\"p\", {\n      css: css`\n            font-size: 16px;\n            font-style: italic;\n            margin-top: 0px;\n          `,\n      children: [\"for \\\"\", search, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SearchPage, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n\n_c = SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Devwork/tutorials/QandA_netcore5/frontend/src/Pages/SearchPage.tsx"],"names":["css","useLocation","searchQuestions","React","Page","SearchPage","SearchParams","URLSearchParams","search","questions","setQuestions","useState","get","useEffect","doSearch","criteria","foundResults"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,WAAT,QAAuC,kBAAvC;AAEA,SAASC,eAAT,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAAA;;AAC9B;AACA,QAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,WAAO,IAAIC,eAAJ,CAAoBN,WAAW,GAAGO,MAAlC,CAAP;AACD,GAFD;;AAF8B,KAExBF,YAFwB;AAAA,YAGDL,WAHC;AAAA;;AAK9B,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BP,KAAK,CAACQ,QAAN,CAA+B,EAA/B,CAAlC;AACA,QAAMH,MAAM,GAAGF,YAAY,GAAGM,GAAf,CAAmB,UAAnB,KAAkC,EAAjD;AAEAT,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpB,UAAMC,QAAQ,GAAG,MAAOC,QAAP,IAA4B;AAC3C,YAAMC,YAAY,GAAG,MAAMd,eAAe,CAACa,QAAD,CAA1C;AACAL,MAAAA,YAAY,CAACM,YAAD,CAAZ;AACD,KAHD;;AAIAF,IAAAA,QAAQ,CAACN,MAAD,CAAR;AACD,GAND,EAMG,CAACA,MAAD,CANH;AAQA,SACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,gBAAZ;AAAA,cACGA,MAAM,IACL;AACE,MAAA,GAAG,EAAER,GAAI;AACnB;AACA;AACA;AACA,WALQ;AAAA,2BAOQQ,MAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA/BM;;IAAMH,U;;KAAAA,U","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport { QuestionList } from '../QuestionList';\r\nimport { searchQuestions, QuestionData } from '../QuestionsData';\r\nimport React from 'react';\r\nimport { Page } from './Page';\r\n\r\nexport const SearchPage = () => {\r\n  // Get the search parameters in the URL\r\n  const SearchParams = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n  };\r\n  const [questions, setQuestions] = React.useState<QuestionData[]>([]);\r\n  const search = SearchParams().get('criteria') || '';\r\n\r\n  React.useEffect(() => {\r\n    const doSearch = async (criteria: string) => {\r\n      const foundResults = await searchQuestions(criteria);\r\n      setQuestions(foundResults);\r\n    };\r\n    doSearch(search);\r\n  }, [search]);\r\n\r\n  return (\r\n    <Page title=\"Search Results\">\r\n      {search && (\r\n        <p\r\n          css={css`\r\n            font-size: 16px;\r\n            font-style: italic;\r\n            margin-top: 0px;\r\n          `}\r\n        >\r\n          for \"{search}\"\r\n        </p>\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}