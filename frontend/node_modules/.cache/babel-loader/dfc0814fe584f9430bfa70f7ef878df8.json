{"ast":null,"code":"var _jsxFileName = \"C:\\\\Devwork\\\\tutorials\\\\QandA_netcore5\\\\frontend\\\\src\\\\Components\\\\Header.tsx\",\n    _s2 = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link, useLocation } from 'react-router-dom';\nimport { gray5, gray1, fontFamily, fontSize, gray2 } from '../CSS/Styles';\nimport { UserIcon } from '../Icons';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const Header = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //TODO: handlesubmit from useForm method\n  const {\n    register\n  } = useForm();\n\n  const UseSearchParams = () => {\n    _s();\n\n    return new URLSearchParams(useLocation().search);\n  };\n\n  _s(UseSearchParams, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n    return [useLocation];\n  });\n\n  const criteria = UseSearchParams().get('criteria') || '';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return _jsxDEV(\"div\", {\n    css: css`\n        position: fixed;\n        box-sizing: border-box;\n        top: 0;\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 10px 20px;\n        background-color: #fff;\n        border-bottom: 1px solid ${gray5};\n        box-shadow: 0 3px 7px 0 rgba(110, 112, 114, 0.21);\n      `,\n    children: [_jsxDEV(Link, {\n      to: \"/\",\n      css: css`\n          font-size: 24px;\n          font-weight: bold;\n          color: ${gray1};\n          text-decoration: none;\n        `,\n      children: \"Q & A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: _jsxDEV(\"input\", { ...register('search'),\n        name: \"search\",\n        type: \"text\",\n        placeholder: \"Search...\",\n        defaultValue: criteria,\n        css: css`\n            box-sizing: border-box;\n            font-family: ${fontFamily};\n            font-size: ${fontSize};\n            padding: 8px 10px;\n            border: 1px solid ${gray5};\n            border-radius: 3px;\n            color: ${gray2};\n            background-color: white;\n            width: 200px;\n            height: 30px;\n            :focus {\n              outline-color: ${gray5};\n            }\n          `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), _jsxDEV(Link, {\n      to: \"/signin\",\n      css: css`\n          font-family: ${fontFamily};\n          font-size: ${fontSize};\n          padding: 5px 10px;\n          background-color: transparent;\n          color: ${gray2};\n          text-decoration: none;\n          cursor: pointer;\n          :focus {\n            outline-color: ${gray5};\n          }\n          span {\n            margin-left: 7px;\n          }\n        `,\n      children: [_jsxDEV(UserIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), _jsxDEV(\"span\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Header, \"0JBRNwbftCCT+FcdElXUCqEL42Y=\", false, function () {\n  return [useForm];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Devwork/tutorials/QandA_netcore5/frontend/src/Components/Header.tsx"],"names":["css","React","useForm","Link","useLocation","gray5","gray1","fontFamily","fontSize","gray2","UserIcon","Header","register","UseSearchParams","URLSearchParams","search","criteria","get","handleSubmit","e","preventDefault"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,UAAvB,EAAmCC,QAAnC,EAA6CC,KAA7C,QAA0D,eAA1D;AACA,SAASC,QAAT,QAAyB,UAAzB;;AAMA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAAA;;AAC1B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeV,OAAO,EAA5B;;AAEA,QAAMW,eAAe,GAAG,MAAM;AAAA;;AAC5B,WAAO,IAAIC,eAAJ,CAAoBV,WAAW,GAAGW,MAAlC,CAAP;AACD,GAFD;;AAJ0B,KAIpBF,eAJoB;AAAA,YAKGT,WALH;AAAA;;AAO1B,QAAMY,QAAQ,GAAGH,eAAe,GAAGI,GAAlB,CAAsB,UAAtB,KAAqC,EAAtD;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAwB;AAC3CA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFD;;AAIA,SACE;AACE,IAAA,GAAG,EAAEpB,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmCK,KAAM;AACzC;AACA,OAbI;AAAA,eAeE,QAAC,IAAD;AACE,MAAA,EAAE,EAAC,GADL;AAEE,MAAA,GAAG,EAAEL,GAAI;AACjB;AACA;AACA,mBAAmBM,KAAM;AACzB;AACA,SAPM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,EA0BE;AAAM,MAAA,QAAQ,EAAEY,YAAhB;AAAA,gBACE,sBACMN,QAAQ,CAAC,QAAD,CADd;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC,WAJd;AAKE,QAAA,YAAY,EAAEI,QALhB;AAME,QAAA,GAAG,EAAEhB,GAAI;AACnB;AACA,2BAA2BO,UAAW;AACtC,yBAAyBC,QAAS;AAClC;AACA,gCAAgCH,KAAM;AACtC;AACA,qBAAqBI,KAAM;AAC3B;AACA;AACA;AACA;AACA,+BAA+BJ,KAAM;AACrC;AACA;AApBQ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA1BF,EAkDE,QAAC,IAAD;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,GAAG,EAAEL,GAAI;AACjB,yBAAyBO,UAAW;AACpC,uBAAuBC,QAAS;AAChC;AACA;AACA,mBAAmBC,KAAM;AACzB;AACA;AACA;AACA,6BAA6BJ,KAAM;AACnC;AACA;AACA;AACA;AACA,SAhBM;AAAA,iBAkBE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAlBF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0ED,CAvFM;;IAAMM,M;UAEUT,O;;;KAFVS,M","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { gray5, gray1, fontFamily, fontSize, gray2 } from '../CSS/Styles';\r\nimport { UserIcon } from '../Icons';\r\n\r\ntype FormData = {\r\n  search: string;\r\n};\r\n\r\nexport const Header = () => {\r\n  //TODO: handlesubmit from useForm method\r\n  const { register } = useForm<FormData>();\r\n\r\n  const UseSearchParams = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n  };\r\n  const criteria = UseSearchParams().get('criteria') || '';\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      css={css`\r\n        position: fixed;\r\n        box-sizing: border-box;\r\n        top: 0;\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        padding: 10px 20px;\r\n        background-color: #fff;\r\n        border-bottom: 1px solid ${gray5};\r\n        box-shadow: 0 3px 7px 0 rgba(110, 112, 114, 0.21);\r\n      `}\r\n    >\r\n      <Link\r\n        to=\"/\"\r\n        css={css`\r\n          font-size: 24px;\r\n          font-weight: bold;\r\n          color: ${gray1};\r\n          text-decoration: none;\r\n        `}\r\n      >\r\n        Q & A\r\n      </Link>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          {...register('search')}\r\n          name=\"search\"\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          defaultValue={criteria}\r\n          css={css`\r\n            box-sizing: border-box;\r\n            font-family: ${fontFamily};\r\n            font-size: ${fontSize};\r\n            padding: 8px 10px;\r\n            border: 1px solid ${gray5};\r\n            border-radius: 3px;\r\n            color: ${gray2};\r\n            background-color: white;\r\n            width: 200px;\r\n            height: 30px;\r\n            :focus {\r\n              outline-color: ${gray5};\r\n            }\r\n          `}\r\n        />\r\n      </form>\r\n      <Link\r\n        to=\"/signin\"\r\n        css={css`\r\n          font-family: ${fontFamily};\r\n          font-size: ${fontSize};\r\n          padding: 5px 10px;\r\n          background-color: transparent;\r\n          color: ${gray2};\r\n          text-decoration: none;\r\n          cursor: pointer;\r\n          :focus {\r\n            outline-color: ${gray5};\r\n          }\r\n          span {\r\n            margin-left: 7px;\r\n          }\r\n        `}\r\n      >\r\n        <UserIcon />\r\n        <span>Sign In</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}