{"ast":null,"code":"var _jsxFileName = \"C:\\\\Devwork\\\\tutorials\\\\QandA_netcore5\\\\frontend\\\\src\\\\Pages\\\\QuestionPage.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Page } from './Page';\nimport { getQuestion } from '../QuestionsData';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const QuestionPage = () => {\n  _s();\n\n  const [question, setQuestion] = React.useState(null);\n  const {\n    questionId\n  } = useParams();\n\n  const doGetQuestion = async questionId => {\n    const foundQuestion = await getQuestion(questionId);\n    setQuestion(foundQuestion);\n  };\n\n  React.useEffect(() => {\n    if (questionId) {\n      doGetQuestion(Number(questionId));\n    }\n  }, [questionId]);\n  return _jsxDEV(Page, {\n    children: [\"Question Page \", questionId]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_s(QuestionPage, \"wBayhm8QBHz4kVXPXfkXATz88m8=\", false, function () {\n  return [useParams];\n});\n\n_c = QuestionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"sources":["C:/Devwork/tutorials/QandA_netcore5/frontend/src/Pages/QuestionPage.tsx"],"names":["React","useParams","Page","getQuestion","QuestionPage","question","setQuestion","useState","questionId","doGetQuestion","foundQuestion","useEffect","Number"],"mappings":";;;AAAA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,WAAT,QAA0C,kBAA1C;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,KAAK,CAACO,QAAN,CAAoC,IAApC,CAAhC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAsBP,SAAS,EAArC;;AAEA,QAAMQ,aAAa,GAAG,MAAOD,UAAP,IAA8B;AAClD,UAAME,aAAa,GAAG,MAAMP,WAAW,CAACK,UAAD,CAAvC;AACAF,IAAAA,WAAW,CAACI,aAAD,CAAX;AACD,GAHD;;AAKAV,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,QAAIH,UAAJ,EAAgB;AACdC,MAAAA,aAAa,CAACG,MAAM,CAACJ,UAAD,CAAP,CAAb;AACD;AACF,GAJD,EAIG,CAACA,UAAD,CAJH;AAMA,SAAO,QAAC,IAAD;AAAA,iCAAqBA,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhBM;;GAAMJ,Y;UAEiBH,S;;;KAFjBG,Y","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { gray3, gray6 } from './Styles';\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Page } from './Page';\r\nimport { getQuestion, QuestionData } from '../QuestionsData';\r\n\r\nexport const QuestionPage = () => {\r\n  const [question, setQuestion] = React.useState<QuestionData | null>(null);\r\n  const { questionId }: any = useParams();\r\n\r\n  const doGetQuestion = async (questionId: number) => {\r\n    const foundQuestion = await getQuestion(questionId);\r\n    setQuestion(foundQuestion);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (questionId) {\r\n      doGetQuestion(Number(questionId));\r\n    }\r\n  }, [questionId]);\r\n\r\n  return <Page>Question Page {questionId}</Page>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}