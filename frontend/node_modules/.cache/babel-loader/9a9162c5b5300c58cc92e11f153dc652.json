{"ast":null,"code":"var _jsxFileName = \"C:\\\\Devwork\\\\tutorials\\\\QandA_netcore5\\\\frontend\\\\src\\\\Pages\\\\HomePage.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React from 'react';\nimport { QuestionList } from '../Components/QuestionList';\nimport { getUnansweredQuestions } from '../Components/QuestionsData';\nimport { Page } from './Page';\nimport { PageTitle } from './PageTitle';\nimport { PrimaryButton } from '../CSS/Styles';\nimport { useHistory } from 'react-router-dom';\nimport { gettingUnansweredQuestionsAction, gotUnansweredQuestionsAction } from '../Store';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const questions = useSelector(state => state.questions.unanswered);\n  const questionsLoading = useSelector(state => state.questions.loading);\n  React.useEffect(() => {\n    const doGetUnansweredQuestions = async () => {\n      dispatch(gettingUnansweredQuestionsAction());\n      const unansweredQuestions = await getUnansweredQuestions();\n      dispatch(gotUnansweredQuestionsAction(unansweredQuestions));\n    };\n\n    doGetUnansweredQuestions(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const history = useHistory();\n\n  const handleAskQuestionClick = () => {\n    history.push('/ask');\n  };\n\n  return _jsxDEV(Page, {\n    children: [_jsxDEV(\"div\", {\n      css: css`\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        `,\n      children: [_jsxDEV(PageTitle, {\n        children: \"Unanswered Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), _jsxDEV(PrimaryButton, {\n        onClick: handleAskQuestionClick,\n        children: \"Ask a question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), questionsLoading ? _jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : _jsxDEV(QuestionList, {\n      data: questions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomePage, \"2tiELm+UOObB0SWGBNHikcXSYv4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useHistory];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Devwork/tutorials/QandA_netcore5/frontend/src/Pages/HomePage.tsx"],"names":["css","React","QuestionList","getUnansweredQuestions","Page","PageTitle","PrimaryButton","useHistory","gettingUnansweredQuestionsAction","gotUnansweredQuestionsAction","useSelector","useDispatch","HomePage","dispatch","questions","state","unanswered","questionsLoading","loading","useEffect","doGetUnansweredQuestions","unansweredQuestions","history","handleAskQuestionClick","push"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,sBAAT,QAAuC,6BAAvC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SACEC,gCADF,EAEEC,4BAFF,QAIO,UAJP;AAKA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAMG,SAAS,GAAGJ,WAAW,CAC1BK,KAAD,IAAqBA,KAAK,CAACD,SAAN,CAAgBE,UADV,CAA7B;AAGA,QAAMC,gBAAgB,GAAGP,WAAW,CACjCK,KAAD,IAAqBA,KAAK,CAACD,SAAN,CAAgBI,OADH,CAApC;AAIAjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpB,UAAMC,wBAAwB,GAAG,YAAY;AAC3CP,MAAAA,QAAQ,CAACL,gCAAgC,EAAjC,CAAR;AACA,YAAMa,mBAAmB,GAAG,MAAMlB,sBAAsB,EAAxD;AACAU,MAAAA,QAAQ,CAACJ,4BAA4B,CAACY,mBAAD,CAA7B,CAAR;AACD,KAJD;;AAKAD,IAAAA,wBAAwB,GANJ,CAOpB;AACD,GARD,EAQG,EARH;AAUA,QAAME,OAAO,GAAGf,UAAU,EAA1B;;AAEA,QAAMgB,sBAAsB,GAAG,MAAM;AACnCD,IAAAA,OAAO,CAACE,IAAR,CAAa,MAAb;AACD,GAFD;;AAIA,SACE,QAAC,IAAD;AAAA,eACE;AACE,MAAA,GAAG,EAAExB,GAAI;AACjB;AACA;AACA;AACA,SALM;AAAA,iBAOE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEuB,sBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGN,gBAAgB,GACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADe,GAGf,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEH;AAApB;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA9CM;;GAAMF,Q;UACMD,W,EACCD,W,EAGOA,W,EAcTH,U;;;KAnBLK,Q","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport React from 'react';\r\nimport { QuestionList } from '../Components/QuestionList';\r\nimport { getUnansweredQuestions } from '../Components/QuestionsData';\r\nimport { Page } from './Page';\r\nimport { PageTitle } from './PageTitle';\r\nimport { PrimaryButton } from '../CSS/Styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  gettingUnansweredQuestionsAction,\r\n  gotUnansweredQuestionsAction,\r\n  AppState,\r\n} from '../Store';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { disposeEmitNodes } from 'typescript';\r\n\r\nexport const HomePage = () => {\r\n  const dispatch = useDispatch();\r\n  const questions = useSelector(\r\n    (state: AppState) => state.questions.unanswered,\r\n  );\r\n  const questionsLoading = useSelector(\r\n    (state: AppState) => state.questions.loading,\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const doGetUnansweredQuestions = async () => {\r\n      dispatch(gettingUnansweredQuestionsAction());\r\n      const unansweredQuestions = await getUnansweredQuestions();\r\n      dispatch(gotUnansweredQuestionsAction(unansweredQuestions));\r\n    };\r\n    doGetUnansweredQuestions();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleAskQuestionClick = () => {\r\n    history.push('/ask');\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <div\r\n        css={css`\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n        `}\r\n      >\r\n        <PageTitle>Unanswered Questions</PageTitle>\r\n        <PrimaryButton onClick={handleAskQuestionClick}>\r\n          Ask a question\r\n        </PrimaryButton>\r\n      </div>\r\n      {questionsLoading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <QuestionList data={questions} />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}