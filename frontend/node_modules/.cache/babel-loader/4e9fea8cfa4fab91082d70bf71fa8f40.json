{"ast":null,"code":"var _jsxFileName = \"C:\\\\Devwork\\\\tutorials\\\\QandA_netcore5\\\\frontend\\\\src\\\\Pages\\\\QuestionPage.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Page } from './Page';\nimport { getQuestion } from '../QuestionsData';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const QuestionPage = () => {\n  _s();\n\n  const [question, setQuestion] = React.useState(null);\n  React.useEffect(() => {\n    const doGetQuestion = async questionId => {\n      const foundQuestion = await getQuestion(questionId);\n      setQuestion(foundQuestion);\n    };\n\n    if (questionId) {\n      doGetQuestion(Number(questionId));\n    }\n  }, [questionId]);\n  const {\n    questionId\n  } = useParams();\n  return _jsxDEV(Page, {\n    children: [\"Question Page \", questionId]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n\n_s(QuestionPage, \"aaIJyhOW3u087KruKgnWKkSxa3E=\", false, function () {\n  return [useParams];\n});\n\n_c = QuestionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"sources":["C:/Devwork/tutorials/QandA_netcore5/frontend/src/Pages/QuestionPage.tsx"],"names":["React","useParams","Page","getQuestion","QuestionPage","question","setQuestion","useState","useEffect","doGetQuestion","questionId","foundQuestion","Number"],"mappings":";;;AAAA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,WAAT,QAA0C,kBAA1C;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,KAAK,CAACO,QAAN,CAAoC,IAApC,CAAhC;AACAP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpB,UAAMC,aAAa,GAAG,MAAOC,UAAP,IAA8B;AAClD,YAAMC,aAAa,GAAG,MAAMR,WAAW,CAACO,UAAD,CAAvC;AACAJ,MAAAA,WAAW,CAACK,aAAD,CAAX;AACD,KAHD;;AAIA,QAAID,UAAJ,EAAgB;AACdD,MAAAA,aAAa,CAACG,MAAM,CAACF,UAAD,CAAP,CAAb;AACD;AACF,GARD,EAQG,CAACA,UAAD,CARH;AAUA,QAAM;AAAEA,IAAAA;AAAF,MAAsBT,SAAS,EAArC;AACA,SAAO,QAAC,IAAD;AAAA,iCAAqBS,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAdM;;GAAMN,Y;UAYiBH,S;;;KAZjBG,Y","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { gray3, gray6 } from './Styles';\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Page } from './Page';\r\nimport { getQuestion, QuestionData } from '../QuestionsData';\r\n\r\nexport const QuestionPage = () => {\r\n  const [question, setQuestion] = React.useState<QuestionData | null>(null);\r\n  React.useEffect(() => {\r\n    const doGetQuestion = async (questionId: number) => {\r\n      const foundQuestion = await getQuestion(questionId);\r\n      setQuestion(foundQuestion);\r\n    };\r\n    if (questionId) {\r\n      doGetQuestion(Number(questionId));\r\n    }\r\n  }, [questionId]);\r\n\r\n  const { questionId }: any = useParams();\r\n  return <Page>Question Page {questionId}</Page>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}