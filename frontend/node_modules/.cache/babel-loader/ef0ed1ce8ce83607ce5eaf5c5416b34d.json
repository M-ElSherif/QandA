{"ast":null,"code":"var _jsxFileName = \"C:\\\\Devwork\\\\tutorials\\\\QandA_netcore5\\\\frontend\\\\src\\\\Pages\\\\SearchPage.tsx\",\n    _s2 = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useLocation } from 'react-router-dom';\nimport React from 'react';\nimport { Page } from './Page';\nimport { QuestionList } from '../Components/QuestionList';\nimport { searchQuestions } from '../Components/QuestionsData';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { searchingQuestionsAction } from '../Store';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nexport const SearchPage = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const dispatch = useDispatch();\n  const questions = useSelector(state => state.questions.searched); // Get the search parameters in the URL\n\n  const SearchParams = () => {\n    _s();\n\n    return new URLSearchParams(useLocation().search);\n  };\n\n  _s(SearchParams, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n    return [useLocation];\n  });\n\n  const search = SearchParams().get('criteria') || '';\n  React.useEffect(() => {\n    const doSearch = async criteria => {\n      dispatch(searchingQuestionsAction());\n      const foundResults = await searchQuestions(criteria);\n      setQuestions(foundResults);\n    };\n\n    doSearch(search);\n  }, [search]);\n  return _jsxDEV(Page, {\n    title: \"Search Results\",\n    children: [search && _jsxDEV(\"p\", {\n      css: css`\n            font-size: 16px;\n            font-style: italic;\n            margin-top: 0px;\n          `,\n      children: [\"for \\\"\", search, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), _jsxDEV(QuestionList, {\n      data: questions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SearchPage, \"nFF2m0g4DSETzyEeINR6TUtBWTc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Devwork/tutorials/QandA_netcore5/frontend/src/Pages/SearchPage.tsx"],"names":["css","useLocation","React","Page","QuestionList","searchQuestions","useSelector","useDispatch","searchingQuestionsAction","SearchPage","dispatch","questions","state","searched","SearchParams","URLSearchParams","search","get","useEffect","doSearch","criteria","foundResults","setQuestions"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,WAAT,QAAuC,kBAAvC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAEEC,wBAFF,QAIO,UAJP;;AAMA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAAA;;AAC9B,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,SAAS,GAAGL,WAAW,CAAEM,KAAD,IAAqBA,KAAK,CAACD,SAAN,CAAgBE,QAAtC,CAA7B,CAF8B,CAG9B;;AACA,QAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,WAAO,IAAIC,eAAJ,CAAoBd,WAAW,GAAGe,MAAlC,CAAP;AACD,GAFD;;AAJ8B,KAIxBF,YAJwB;AAAA,YAKDb,WALC;AAAA;;AAO9B,QAAMe,MAAM,GAAGF,YAAY,GAAGG,GAAf,CAAmB,UAAnB,KAAkC,EAAjD;AAEAf,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpB,UAAMC,QAAQ,GAAG,MAAOC,QAAP,IAA4B;AAC3CV,MAAAA,QAAQ,CAACF,wBAAwB,EAAzB,CAAR;AACA,YAAMa,YAAY,GAAG,MAAMhB,eAAe,CAACe,QAAD,CAA1C;AACAE,MAAAA,YAAY,CAACD,YAAD,CAAZ;AACD,KAJD;;AAKAF,IAAAA,QAAQ,CAACH,MAAD,CAAR;AACD,GAPD,EAOG,CAACA,MAAD,CAPH;AASA,SACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,gBAAZ;AAAA,eACGA,MAAM,IACL;AACE,MAAA,GAAG,EAAEhB,GAAI;AACnB;AACA;AACA;AACA,WALQ;AAAA,2BAOQgB,MAPR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAYE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEL;AAApB;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAlCM;;IAAMF,U;UACMF,W,EACCD,W;;;KAFPG,U","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\n\r\nimport React from 'react';\r\nimport { Page } from './Page';\r\nimport { QuestionList } from '../Components/QuestionList';\r\nimport { searchQuestions } from '../Components/QuestionsData';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  AppState,\r\n  searchingQuestionsAction,\r\n  searchedQuestionsAction,\r\n} from '../Store';\r\n\r\nexport const SearchPage = () => {\r\n  const dispatch = useDispatch();\r\n  const questions = useSelector((state: AppState) => state.questions.searched);\r\n  // Get the search parameters in the URL\r\n  const SearchParams = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n  };\r\n  const search = SearchParams().get('criteria') || '';\r\n\r\n  React.useEffect(() => {\r\n    const doSearch = async (criteria: string) => {\r\n      dispatch(searchingQuestionsAction());\r\n      const foundResults = await searchQuestions(criteria);\r\n      setQuestions(foundResults);\r\n    };\r\n    doSearch(search);\r\n  }, [search]);\r\n\r\n  return (\r\n    <Page title=\"Search Results\">\r\n      {search && (\r\n        <p\r\n          css={css`\r\n            font-size: 16px;\r\n            font-style: italic;\r\n            margin-top: 0px;\r\n          `}\r\n        >\r\n          for \"{search}\"\r\n        </p>\r\n      )}\r\n      <QuestionList data={questions} />\r\n    </Page>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}