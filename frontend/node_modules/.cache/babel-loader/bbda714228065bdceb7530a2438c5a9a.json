{"ast":null,"code":"var _jsxFileName = \"C:\\\\Devwork\\\\tutorials\\\\QandA_netcore5\\\\frontend\\\\src\\\\Pages\\\\AskPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FieldContainer, FieldError, FieldInput, FieldLabel, Fieldset, FieldTextArea, FormButtonContainer, PrimaryButton } from '../CSS/Styles';\nimport { Page } from './Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AskPage = () => {\n  _s();\n\n  const {\n    register,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: 'onBlur'\n  });\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Ask a question\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Fieldset, {\n        children: [/*#__PURE__*/_jsxDEV(FieldContainer, {\n          children: [/*#__PURE__*/_jsxDEV(FieldLabel, {\n            htmlFor: \"title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FieldInput, { ...register('title', {\n              required: true,\n              minLength: 10\n            }),\n            id: \"title\",\n            name: \"title\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), errors.title && errors.title.type === 'required' && /*#__PURE__*/_jsxDEV(FieldError, {\n            children: \"You must enter the question title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), errors.title && errors.title.type === 'minLength' && /*#__PURE__*/_jsxDEV(FieldError, {\n            children: \"The title must be at least 10 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FieldContainer, {\n          children: [/*#__PURE__*/_jsxDEV(FieldLabel, {\n            htmlFor: \"content\",\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FieldTextArea, { ...register('content'),\n            id: \"content\",\n            name: \"content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormButtonContainer, {\n          children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n            type: \"submit\",\n            children: \"Submit Your Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AskPage, \"8Loum8L5ZWjAn3tQabXTr6jiHEU=\", false, function () {\n  return [useForm];\n});\n\n_c = AskPage;\nexport default AskPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AskPage\");","map":{"version":3,"sources":["C:/Devwork/tutorials/QandA_netcore5/frontend/src/Pages/AskPage.tsx"],"names":["React","useForm","FieldContainer","FieldError","FieldInput","FieldLabel","Fieldset","FieldTextArea","FormButtonContainer","PrimaryButton","Page","AskPage","register","formState","errors","mode","required","minLength","title","type"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SACEC,cADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,QALF,EAMEC,aANF,EAOEC,mBAPF,EAQEC,aARF,QASO,eATP;AAUA,SAASC,IAAT,QAAqB,QAArB;;AAOA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAFP,MAGFb,OAAO,CAAW;AAAEc,IAAAA,IAAI,EAAE;AAAR,GAAX,CAHX;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,gBAAZ;AAAA,2BACE;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE,QAAC,cAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD,OACMH,QAAQ,CAAC,OAAD,EAAU;AAAEI,cAAAA,QAAQ,EAAE,IAAZ;AAAkBC,cAAAA,SAAS,EAAE;AAA7B,aAAV,CADd;AAEE,YAAA,EAAE,EAAC,OAFL;AAGE,YAAA,IAAI,EAAC,OAHP;AAIE,YAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,kBAFF,EAQGH,MAAM,CAACI,KAAP,IAAgBJ,MAAM,CAACI,KAAP,CAAaC,IAAb,KAAsB,UAAtC,iBACC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,EAWGL,MAAM,CAACI,KAAP,IAAgBJ,MAAM,CAACI,KAAP,CAAaC,IAAb,KAAsB,WAAtC,iBACC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE,QAAC,cAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,aAAD,OACMP,QAAQ,CAAC,SAAD,CADd;AAEE,YAAA,EAAE,EAAC,SAFL;AAGE,YAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAwBE,QAAC,mBAAD;AAAA,iCACE,QAAC,aAAD;AAAe,YAAA,IAAI,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAxCM;;GAAMD,O;UAIPV,O;;;KAJOU,O;AA0Cb,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport {\r\n  FieldContainer,\r\n  FieldError,\r\n  FieldInput,\r\n  FieldLabel,\r\n  Fieldset,\r\n  FieldTextArea,\r\n  FormButtonContainer,\r\n  PrimaryButton,\r\n} from '../CSS/Styles';\r\nimport { Page } from './Page';\r\n\r\ntype FormData = {\r\n  title: string;\r\n  content: string;\r\n};\r\n\r\nexport const AskPage = () => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n  } = useForm<FormData>({ mode: 'onBlur' });\r\n\r\n  return (\r\n    <Page title=\"Ask a question\">\r\n      <form>\r\n        <Fieldset>\r\n          <FieldContainer>\r\n            <FieldLabel htmlFor=\"title\">Title</FieldLabel>\r\n            <FieldInput\r\n              {...register('title', { required: true, minLength: 10 })}\r\n              id=\"title\"\r\n              name=\"title\"\r\n              type=\"text\"\r\n            ></FieldInput>\r\n            {errors.title && errors.title.type === 'required' && (\r\n              <FieldError>You must enter the question title</FieldError>\r\n            )}\r\n            {errors.title && errors.title.type === 'minLength' && (\r\n              <FieldError>The title must be at least 10 characters</FieldError>\r\n            )}\r\n          </FieldContainer>\r\n          <FieldContainer>\r\n            <FieldLabel htmlFor=\"content\">Content</FieldLabel>\r\n            <FieldTextArea\r\n              {...register('content')}\r\n              id=\"content\"\r\n              name=\"content\"\r\n            />\r\n          </FieldContainer>\r\n          <FormButtonContainer>\r\n            <PrimaryButton type=\"submit\">Submit Your Question</PrimaryButton>\r\n          </FormButtonContainer>\r\n        </Fieldset>\r\n      </form>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default AskPage;\r\n"]},"metadata":{},"sourceType":"module"}